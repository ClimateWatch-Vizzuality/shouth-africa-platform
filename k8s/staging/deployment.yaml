apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    name: {name}-staging
  name: {name}-staging
spec:
  revisionHistoryLimit: 0
  template:
    metadata:
      annotations:
        chaos.alpha.kubernetes.io/enabled: "true"
      labels:
        name: {name}-staging
    spec:
      tolerations:
      - key: "type"
        operator: "Equal"
        value: "webapps"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: In
                values:
                - webapps
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - {name}-staging
              topologyKey: kubernetes.io/hostname
      containers:
      - name: {name}-staging
        image: vizzuality/{name}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "0Mi"
            cpu: "0m"
        env:
          - name: RACK_ENV
            value: production
          - name: RAILS_ENV
            value: production
          - name: PORT
            value: "3000"
          - name: RAILS_SERVE_STATIC_FILES
            value: "true"
          - name: RAILS_LOG_TO_STDOUT
            value: "true"
          - name: POSTGRES_URL
            valueFrom:
                secretKeyRef:
                  name: dbsecrets
                  key: SA_POSTGRES_URL_STAGING
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              name: dbsecrets
              key: SA_AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              name: dbsecrets
              key: SA_AWS_SECRET_ACCESS_KEY
          - name: AWS_REGION
            valueFrom:
              name: dbsecrets
              key: SA_AWS_REGION
          - name: S3_BUCKET_NAME
            valueFrom:
              name: dbsecrets
              key: SA_S3_BUCKET_NAME

        ports:
          - containerPort: 3000

      restartPolicy: Always
